// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int        @id @default(autoincrement())
  username          String     @unique
  email             String     @unique
  password          String
  profilePictureUrl String?
  createdAt         DateTime   @default(now())
  games             Game[]
  GameUser          GameUser[]
  
  // Relações com amizades
  sentFriendships   Friendship[] @relation("SentFriendships")
  receivedFriendships Friendship[] @relation("ReceivedFriendships")
}

model Game {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  users       User[]
  GameUser    GameUser[]
}

model GameUser {
  gameId Int
  userId Int

  game Game @relation(fields: [gameId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([gameId, userId])
}

model Friendship {
  id          Int      @id @default(autoincrement())
  senderId    Int
  receiverId  Int
  status      String   @default("pending") // pending, accepted, rejected
  createdAt   DateTime @default(now())

  sender      User @relation("SentFriendships", fields: [senderId], references: [id])
  receiver    User @relation("ReceivedFriendships", fields: [receiverId], references: [id])
}