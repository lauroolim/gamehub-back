name: GCP

on:
  push:
    branches: [develop]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          npm install
          npm install -g jest
          npm install --save-dev jest-junit

      - name: Run tests
        run: jest --ci --reporters=default --reporters=jest-junit
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: junit.xml
          retention-days: 30

  security:
    name: Security Scan
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Run ZAP Scan
        run: |
          docker run --rm -v ${PWD}/zap-report:/zap/wrk:rw owasp/zap2docker-stable zap-baseline.py -t ${{ needs.deploy.outputs.app_url }} -r zap-report.html -I

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-report/
          retention-days: 30
          
  deploy:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    environment: GameHub-GCP
    env:
      REGISTRY: us-east1-docker.pkg.dev
      IMAGE_NAME: ${{ secrets.PROJECT_ID }}/site-repo/gamehub
      REGION: us-east1
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.PROJECT_CREDENTIALS }}

      - name: Auth Docker for Artifact Registry
        run: |
          gcloud auth configure-docker $REGISTRY --quiet
          
      - name: Build Image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
          docker build -t $REGISTRY/$IMAGE_NAME:latest .

      - name: Push Image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_NAME:latest

      - name: Deploy to Cloud Run
        id: deploy
        run: |
          gcloud run deploy gamehub 

 
